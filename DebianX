1#!/bin/bash
export DEBIAN_FRONTEND=noninteractive

#############################
# Script by VPSIIX
# Donations : https://paypal.me/ahmadfauzanhabibi
# Facebook: https://fb.com/ahmadfauzanhabibi
#############################
## WARNING: Do not modify or edit anything all Function or Variables used for this script is too sensitive. If you know what to do, you can be changed depends on your preferred values.
#############################
# Script name
MyScriptName='VPSIIX-AutoScriptDebian';

# Get IP Address
function ip_address(){
  local IP="$( ip addr | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | egrep -v "^192\.168|^172\.1[6-9]\.|^172\.2[0-9]\.|^172\.3[0-2]\.|^10\.|^127\.|^255\.|^0\." | head -n 1 )"
  [ -z "${IP}" ] && IP="$( wget -qO- -t1 -T2 ipv4.icanhazip.com )"
  [ -z "${IP}" ] && IP="$( wget -qO- -t1 -T2 ipinfo.io/ip )"
  [ ! -z "${IP}" ] && echo "${IP}" || echo
} 
IPADDR="$(ip_address)";

# OpenSSH Ports
SSH_Port1='22';
SSH_Port2='143';

# Your SSH Banner
SSH_Banner='https://raw.githubusercontent.com/vpsiix/AutoScriptDebian/master/Files/Plugins/Banner';

# Dropbear Ports
Dropbear_Port1='109';
Dropbear_Port2='110';

# Stunnel Ports
Stunnel_Port1='443'; # through Dropbear
Stunnel_Port2='444'; # through OpenSSH

# Privoxy Ports
Privoxy_Port1='8888';
Privoxy_Port2='9999';

# Squid Ports
Squid_Port1='8000';
Squid_Port2='8080';

# Server local time
MyVPS_Time='Asia/Jakarta';
YearNow=`date +'%Y'`;

#############################
## WARNING: Do not modify or edit anything all Function or Variables used for this script is too sensitive. If you know what to do, you can be changed depends on your preferred values.
#############################
# Install Updates
#############################
apt-get -y install linuxlogo

# check registered ip
wget -q -O IPREG https://raw.githubusercontent.com/vpsiix/AutoScriptDebian/master/Files/IPREG.txt
if ! grep -w -q $IPADDR IPREG; then
 linux_logo -l
 echo " "
 echo -e "\e[033;31m SORRY ... IP $IPADDR NOT REGISTERED for using this script\e[0m"
 rm -f IPREG
 sleep 5
 exit 1
fi

echo ""
linux_logo -l
echo ""
echo -e "\e[033;32m IP $IPADDR registered for using this script\e[0m"
sleep 5

# Removing some firewall tools that may affect other services
apt-get -y remove --purge ufw firewalld mariadb*;
 
# Adding Repository
apt-get -y install wget curl sudo sed
apt-get -y install gnupg1 gnupg2 apt-transport-https lsb-release ca-certificates openssl easy-rsa
echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" >> /etc/apt/sources.list
echo "deb http://download.webmin.com/download/repository sarge contrib" >> /etc/apt/sources.list
wget https://download.webmin.com/jcameron-key.asc
apt-key add jcameron-key.asc
wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg
wget http://repo.mysql.com/mysql-apt-config_0.8.16-1_all.deb
apt-get -y install ./mysql-apt-config_0.8.16-1_all.deb
rm -r ./mysql-apt-config_0.8.16-1_all.deb
cd
apt-get update
 
# Installing some important machine essentials
apt-get -y install zip unzip nano build-essential
apt-get -y install tar gzip p7zip-full bzip2 bc rc git ccrypt mcrypt libmcrypt-dev libreadline-dev cron net-tools dnsutils dos2unix screen ngrep
 
# Now installing all our wanted services
apt-get -y install nginx ruby screenfetch

# Installing all required packages to install Webmin
apt-get -y install perl libnet-ssleay-perl libauthen-pam-perl libpam-runtime libio-pty-perl apt-show-versions python dbus
apt-get -y install shared-mime-info jq
 
# install php
apt-get -y install php5.6 php5.6-fpm php5.6-cli php5.6-mysql php5.6-mcrypt
 
# Installing a text colorizer
gem install lolcat

# Trying to remove obsolette packages after installation
apt-get -y autoremove

# Install Webmin
apt-get -y --force-yes -f install libxml-parser-perl
apt-get -y install webmin
sed -i 's|ssl=1|ssl=0|g' /etc/webmin/miniserv.conf
sed -i 's/theme=authentic-theme/theme=gray-theme/g' /etc/webmin/config
sed -i 's/preroot=authentic-theme/preroot=gray-theme/g' /etc/webmin/miniserv.conf
 
# Then restart to take effect
systemctl restart webmin

#############################
## WARNING: Do not modify or edit anything all Function or Variables used for this script is too sensitive. If you know what to do, you can be changed depends on your preferred values.
#############################
# Configurating SSH
#############################

echo ""
linux_logo -l
echo ""
echo -e "\e[033;32m Configurating SSH\e[0m"
echo ""
sleep 2

# Removing some duplicated sshd server configs
rm -f /etc/ssh/sshd_config*
 
# Creating a SSH server config using cat eof tricks
cat <<'MySSHConfig' > /etc/ssh/sshd_config
# My OpenSSH Server config
Port myPORT1
Port myPORT2
AddressFamily inet
ListenAddress 0.0.0.0
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key
PermitRootLogin yes
MaxSessions 1024
PubkeyAuthentication yes
PasswordAuthentication yes
PermitEmptyPasswords no
ChallengeResponseAuthentication no
UsePAM yes
X11Forwarding yes
PrintMotd no
ClientAliveInterval 240
ClientAliveCountMax 2
UseDNS no
Banner /etc/banner
AcceptEnv LANG LC_*
Subsystem   sftp  /usr/lib/openssh/sftp-server
MySSHConfig

# Now we'll put our ssh ports inside of sshd_config
sed -i "s|myPORT1|$SSH_Port1|g" /etc/ssh/sshd_config
sed -i "s|myPORT2|$SSH_Port2|g" /etc/ssh/sshd_config

# Download our SSH Banner
rm -f /etc/banner
wget -qO /etc/banner "$SSH_Banner"
dos2unix -q /etc/banner

# My workaround code to remove `BAD Password error` from passwd command, it will fix password-related error on their ssh accounts.
sed -i '/password\s*requisite\s*pam_cracklib.s.*/d' /etc/pam.d/common-password
sed -i 's/use_authtok //g' /etc/pam.d/common-password

# Some command to identify null shells when you tunnel through SSH or using Stunnel, it will fix user/pass authentication error on HTTP Injector, KPN Tunnel, eProxy, SVI, HTTP Proxy Injector etc ssh/ssl tunneling apps.
sed -i '/\/bin\/false/d' /etc/shells
sed -i '/\/usr\/sbin\/nologin/d' /etc/shells
echo '/bin/false' >> /etc/shells
echo '/usr/sbin/nologin' >> /etc/shells
 
# Restarting openssh service
systemctl restart ssh

#############################
## WARNING: Do not modify or edit anything all Function or Variables used for this script is too sensitive. If you know what to do, you can be changed depends on your preferred values.
#############################
# Configurating Dropbar
#############################

echo ""
linux_logo -l
echo ""
echo -e "\e[033;32m Configurating Dropbear\e[0m"
echo ""
sleep 2

# install dropbear
apt-get -y install dropbear
 
# Removing some duplicate config file
rm -rf /etc/default/dropbear*
 
# creating dropbear config using cat eof tricks
cat <<'MyDropbear' > /etc/default/dropbear
# My Dropbear Config
NO_START=0
DROPBEAR_PORT=PORT01
DROPBEAR_EXTRA_ARGS="-p PORT02"
DROPBEAR_BANNER="/etc/banner"
DROPBEAR_RSAKEY="/etc/dropbear/dropbear_rsa_host_key"
DROPBEAR_DSSKEY="/etc/dropbear/dropbear_dss_host_key"
DROPBEAR_ECDSAKEY="/etc/dropbear/dropbear_ecdsa_host_key"
DROPBEAR_RECEIVE_WINDOW=65536
MyDropbear

# Now changing our desired dropbear ports
sed -i "s|PORT01|$Dropbear_Port1|g" /etc/default/dropbear
sed -i "s|PORT02|$Dropbear_Port2|g" /etc/default/dropbear
 
# Restarting dropbear service
systemctl restart dropbear

#############################
## WARNING: Do not modify or edit anything all Function or Variables used for this script is too sensitive. If you know what to do, you can be changed depends on your preferred values.
#############################
# Configurating Stunnel
#############################

echo ""
linux_logo -l
echo ""
echo -e "\e[033;32m Configurating STunnel\e[0m"
echo ""
sleep 2

# Install stunnel
apt-get -y install stunnel4

# Creating stunnel startup config using cat eof tricks
cat <<'MyStunnelD' > /etc/default/stunnel4
# My Stunnel Config
ENABLED=1
FILES="/etc/stunnel/*.conf"
OPTIONS=""
BANNER="/etc/banner"
PPP_RESTART=0
# RLIMITS="-n 4096 -d unlimited"
RLIMITS=""
MyStunnelD

# Removing all stunnel folder contents
rm -rf /etc/stunnel/*
 
# Creating stunnel certifcate using openssl
openssl req -new -x509 -days 9999 -nodes -subj "/C=ID/ST=Jawa Barat/L=Indramayu/O=$MyScriptName/OU=$MyScriptName/CN=$MyScriptName" -out /etc/stunnel/stunnel.pem -keyout /etc/stunnel/stunnel.pem &> /dev/null
##  > /dev/null 2>&1

# Creating stunnel server config
cat <<'MyStunnelC' > /etc/stunnel/stunnel.conf
# My Stunnel Config
pid = /var/run/stunnel.pid
cert = /etc/stunnel/stunnel.pem
client = no
socket = l:TCP_NODELAY=1
socket = r:TCP_NODELAY=1
TIMEOUTclose = 0

[dropbear]
accept = Stunnel_Port1
connect = 127.0.0.1:dropbear_port_c

[openssh]
accept = Stunnel_Port2
connect = 127.0.0.1:openssh_port_c
MyStunnelC

# setting stunnel ports
sed -i "s|Stunnel_Port1|$Stunnel_Port1|g" /etc/stunnel/stunnel.conf
sed -i "s|dropbear_port_c|$(netstat -tlnp | grep -i dropbear | awk '{print $4}' | cut -d: -f2 | xargs | awk '{print $2}' | head -n1)|g" /etc/stunnel/stunnel.conf
sed -i "s|Stunnel_Port2|$Stunnel_Port2|g" /etc/stunnel/stunnel.conf
sed -i "s|openssh_port_c|$(netstat -tlnp | grep -i ssh | awk '{print $4}' | cut -d: -f2 | xargs | awk '{print $2}' | head -n1)|g" /etc/stunnel/stunnel.conf

# Restarting stunnel service
systemctl restart stunnel4

# Allow IPv4 Forwarding
sed -i '/net.ipv4.ip_forward.*/d' /etc/sysctl.conf
sysctl --system &> /dev/null
 
# Enabling IPv4 Forwarding
echo 1 > /proc/sys/net/ipv4/ip_forward

#############################
## WARNING: Do not modify or edit anything all Function or Variables used for this script is too sensitive. If you know what to do, you can be changed depends on your preferred values.
#############################
# Configurating Squid Privoxy
#############################

echo ""
linux_logo -l
echo ""
echo -e "\e[033;32m Configurating Privoxy\e[0m"
echo ""
sleep 2

# Install Privoxy
apt-get -y install squid privoxy

# Removing Duplicate privoxy config
rm -rf /etc/privoxy/config*
 
# Creating Privoxy server config using cat eof tricks
cat <<'myPrivoxy' > /etc/privoxy/config
# My Privoxy Server Config
user-manual /usr/share/doc/privoxy/user-manual
confdir /etc/privoxy
logdir /var/log/privoxy
filterfile default.filter
logfile logfile
listen-address 0.0.0.0:Privoxy_Port1
listen-address 0.0.0.0:Privoxy_Port2
toggle 1
enable-remote-toggle 0
enable-remote-http-toggle 0
enable-edit-actions 0
enforce-blocks 0
buffer-limit 4096
enable-proxy-authentication-forwarding 1
forwarded-connect-retries 1
accept-intercepted-requests 1
allow-cgi-request-crunching 1
split-large-forms 0
keep-alive-timeout 5
tolerate-pipelining 1
socket-timeout 300
permit-access 0.0.0.0/0 IP-ADDRESS
myPrivoxy

# Setting machine's IP Address inside of our privoxy config(security that only allows this machine to use this proxy server)
sed -i "s|IP-ADDRESS|$IPADDR|g" /etc/privoxy/config
 
# Setting privoxy ports
sed -i "s|Privoxy_Port1|$Privoxy_Port1|g" /etc/privoxy/config
sed -i "s|Privoxy_Port2|$Privoxy_Port2|g" /etc/privoxy/config

# I'm setting Some Squid
rm -rf /etc/squid/sq*
cat <<'mySquid' > /etc/squid/squid.conf
acl localhost src 127.0.0.1/32 ::1
acl to_localhost dst 127.0.0.0/8 0.0.0.0/32 ::1
acl localnet src 10.0.0.0/8
acl localnet src 172.16.0.0/12
acl localnet src 192.168.0.0/16
acl localnet src fc00::/7
acl localnet src fe80::/10
acl SSL_ports port 80-8085
acl Safe_ports port 80
acl Safe_ports port 110
acl Safe_ports port 21
acl Safe_ports port 443
acl Safe_ports port 444
acl Safe_ports port 445
acl Safe_ports port 70
acl Safe_ports port 210
acl Safe_ports port 1025-65535
acl Safe_ports port 280
acl Safe_ports port 488
acl Safe_ports port 591
acl Safe_ports port 777
acl CONNECT method CONNECT
acl GET method GET
acl PUT method PUT
acl POST method POST
acl SSH dst IPADD-IPADD/32
http_access allow SSH
http_access allow localnet
http_access allow manager localhost
http_access deny manager
http_access allow localhost
http_access deny all
http_port Squid_Port1
http_port Squid_Port2
coredump_dir /var/spool/squid3
refresh_pattern ^ftp: 1440 20% 10080
refresh_pattern ^gopher: 1440 0% 1440
refresh_pattern -i (/cgi-bin/|\?) 0 0% 0
refresh_pattern . 0 20% 4320
visible_hostname VPSIIX
mySquid
sed -i "s|Squid_Port1|$Squid_Port1|g" /etc/squid/squid.conf
sed -i "s|Squid_Port2|$Squid_Port2|g" /etc/squid/squid.conf
sed -i "s|IPADD|$IPADDR|g" /etc/squid/squid.conf

# Starting Proxy server
echo -e "Restarting proxy server.."
systemctl restart privoxy
systemctl restart squid
 
#############################
## WARNING: Do not modify or edit anything all Function or Variables used for this script is too sensitive. If you know what to do, you can be changed depends on your preferred values.
#############################
# Configurating Other Service
#############################

echo ""
linux_logo -l
echo ""
echo -e "\e[033;32m Configurating Service\e[0m"
echo ""
sleep 2

# Creating directory for startup script
rm -rf /etc/vpsiix
mkdir -p /etc/vpsiix
chmod -R 755 /etc/vpsiix
 
# Creating startup script using cat eof tricks
cat <<'EOFSH' > /etc/vpsiix/startup.sh
#!/bin/bash
# Setting server local time
ln -fs /usr/share/zoneinfo/MyVPS_Time /etc/localtime

# Prevent DOS-like UI when installing using APT (Disabling APT interactive dialog)
export DEBIAN_FRONTEND=noninteractive

# Allowing ALL TCP ports for our machine (Simple workaround for policy-based VPS)
iptables -A INPUT -s $IPADDR -p tcp -m multiport --dport 1:65535 -j ACCEPT
iptables -A INPUT -m string -iptables -Algo bm --string "BitTorrent" -j REJECT
iptables -A INPUT -m string -iptables -Algo bm --string "BitTorrent protocol" -j REJECT
iptables -A INPUT -m string -iptables -Algo bm --string "peer_id=" -j REJECT
iptables -A INPUT -m string -iptables -Algo bm --string ".torrent" -j REJECT
iptables -A INPUT -m string -iptables -Algo bm --string "announce.php?passkey=" -j REJECT
iptables -A INPUT -m string -iptables -Algo bm --string "torrent" -j REJECT
iptables -A INPUT -m string -iptables -Algo bm --string "info_hash" -j REJECT
iptables -A INPUT -m string -iptables -Algo bm --string "/default.ida?" -j REJECT
iptables -A INPUT -m string -iptables -Algo bm --string ".exe?/c+dir" -j REJECT
iptables -A INPUT -m string -iptables -Algo bm --string ".exe?/c_tftp" -j REJECT
iptables -A INPUT -m string --string "peer_id" -iptables -Algo kmp -j REJECT
iptables -A INPUT -m string --string "BitTorrent" -iptables -Algo kmp -j REJECT
iptables -A INPUT -m string --string "BitTorrent protocol" -iptables -Algo kmp -j REJECT
iptables -A INPUT -m string --string "bittorrentiptables -Announce" -iptables -Algo kmp -j REJECT
iptables -A INPUT -m string --string "announce.php?passkey=" -iptables -Algo kmp -j REJECT
iptables -A INPUT -m string --string "find_node" -iptables -Algo kmp -j REJECT
iptables -A INPUT -m string --string "info_hash" -iptables -Algo kmp -j REJECT
iptables -A INPUT -m string --string "get_peers" -iptables -Algo kmp -j REJECT
iptables -A FORWARD -m string -iptables -Algo bm --string "BitTorrent" -j REJECT
iptables -A FORWARD -m string -iptables -Algo bm --string "BitTorrent protocol" -j REJECT
iptables -A FORWARD -m string -iptables -Algo bm --string "peer_id=" -j REJECT
iptables -A FORWARD -m string -iptables -Algo bm --string ".torrent" -j REJECT
iptables -A FORWARD -m string -iptables -Algo bm --string "announce.php?passkey=" -j REJECT
iptables -A FORWARD -m string -iptables -Algo bm --string "torrent" -j REJECT
iptables -A FORWARD -m string -iptables -Algo bm --string "info_hash" -j REJECT
iptables -A FORWARD -m string -iptables -Algo bm --string "/default.ida?" -j REJECT
iptables -A FORWARD -m string -iptables -Algo bm --string ".exe?/c+dir" -j REJECT
iptables -A FORWARD -m string -iptables -Algo bm --string ".exe?/c_tftp" -j REJECT
iptables -A FORWARD -m string --string "peer_id" -iptables -Algo kmp -j REJECT
iptables -A FORWARD -m string --string "BitTorrent" -iptables -Algo kmp -j REJECT
iptables -A FORWARD -m string --string "BitTorrent protocol" -iptables -Algo kmp -j REJECT
iptables -A FORWARD -m string --string "bittorrentiptables -Announce" -iptables -Algo kmp -j REJECT
iptables -A FORWARD -m string --string "announce.php?passkey=" -iptables -Algo kmp -j REJECT
iptables -A FORWARD -m string --string "find_node" -iptables -Algo kmp -j REJECT
iptables -A FORWARD -m string --string "info_hash" -iptables -Algo kmp -j REJECT
iptables -A FORWARD -m string --string "get_peers" -iptables -Algo kmp -j REJECT
iptables -A OUTPUT -m string -iptables -Algo bm --string "BitTorrent" -j REJECT
iptables -A OUTPUT -m string -iptables -Algo bm --string "BitTorrent protocol" -j REJECT
iptables -A OUTPUT -m string -iptables -Algo bm --string "peer_id=" -j REJECT
iptables -A OUTPUT -m string -iptables -Algo bm --string ".torrent" -j REJECT
iptables -A OUTPUT -m string -iptables -Algo bm --string "announce.php?passkey=" -j REJECT
iptables -A OUTPUT -m string -iptables -Algo bm --string "torrent" -j REJECT
iptables -A OUTPUT -m string -iptables -Algo bm --string "info_hash" -j REJECT
iptables -A OUTPUT -m string -iptables -Algo bm --string "/default.ida?" -j REJECT
iptables -A OUTPUT -m string -iptables -Algo bm --string ".exe?/c+dir" -j REJECT
iptables -A OUTPUT -m string -iptables -Algo bm --string ".exe?/c_tftp" -j REJECT
iptables -A OUTPUT -m string --string "peer_id" -iptables -Algo kmp -j REJECT
iptables -A OUTPUT -m string --string "BitTorrent" -iptables -Algo kmp -j REJECT
iptables -A OUTPUT -m string --string "BitTorrent protocol" -iptables -Algo kmp -j REJECT
iptables -A OUTPUT -m string --string "bittorrentiptables -Announce" -iptables -Algo kmp -j REJECT
iptables -A OUTPUT -m string --string "announce.php?passkey=" -iptables -Algo kmp -j REJECT
iptables -A OUTPUT -m string --string "find_node" -iptables -Algo kmp -j REJECT
iptables -A OUTPUT -m string --string "info_hash" -iptables -Algo kmp -j REJECT
iptables -A OUTPUT -m string --string "get_peers" -iptables -Algo kmp -j REJECT

# Deleting Expired SSH Accounts
/usr/local/sbin/delete_expired &> /dev/null
EOFSH
chmod +x /etc/vpsiix/startup.sh
 
# Setting server local time every time this machine reboots
sed -i "s|MyVPS_Time|$MyVPS_Time|g" /etc/vpsiix/startup.sh
rm -rf /etc/sysctl.d/99*

# Setting our startup script to run every machine boots 
echo "[Unit]
Description=vpsiix Startup Script
Before=network-online.target
Wants=network-online.target

[Service]
Type=oneshot
ExecStart=/bin/bash /etc/vpsiix/startup.sh
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target" > /etc/systemd/system/vpsiix.service
chmod +x /etc/systemd/system/vpsiix.service
systemctl daemon-reload
systemctl start vpsiix
systemctl enable vpsiix &> /dev/null

# Rebooting cron service
systemctl restart cron
systemctl enable cron

# Configurating Menu
echo -e " Creating Menu scripts.."
cd /usr/local/sbin/
rm -rf {accounts,base-ports,base-ports-wc,base-script,bench-network,clearcache,connections,create,create_random,create_trial,delete_expired,diagnose,edit_dropbear,edit_openssh,edit_openvpn,edit_ports,edit_squid3,edit_stunnel4,locked_list,menu,options,ram,reboot_sys,reboot_sys_auto,restart_services,server,set_multilogin_autokill,set_multilogin_autokill_lib,show_ports,speedtest,user_delete,user_details,user_details_lib,user_extend,user_list,user_lock,user_unlock}
wget -q https://https://github.com/vpsiix/AutoScriptDebian/raw/master/Files/Menu/bashmenu.zip
unzip -q bashmenu.zip
rm -f bashmenu.zip
chmod +x ./*
dos2unix ./* &> /dev/null
sed -i 's|/etc/squid/squid.conf|/etc/privoxy/config|g' ./*
sed -i 's|http_port|listen-address|g' ./*
cd

#############################
## WARNING: Do not modify or edit anything all Function or Variables used for this script is too sensitive. If you know what to do, you can be changed depends on your preferred values.
#############################
# Configurating Web Server
#############################

echo ""
linux_logo -l
echo ""
echo -e "\e[033;32m Configurating Web Server\e[0m"
echo ""
sleep 2

# Creating Database
apt-get -y install mysql-server
chown -R mysql:mysql /var/lib/mysql/
chmod -R 755 /var/lib/mysql/

# setting webserver
useradd -m ci
mkdir -p /home/ci/public_html
rm /home/ci/public_html/index*
rm /var/www/html/index*
cd /home/ci/public_html
wget -q https://https://github.com/vpsiix/AutoScriptDebian/raw/master/Files/Plugins/vpsiixpanel.zip
unzip -q vpsiixpanel.zip
rm -f vpsiixpanel.zip
cd
rm  -rf /etc/nginx/sites-enabled/default
rm -rf /etc/nginx/sites-available/default
mv /etc/nginx/nginx.conf /etc/nginx/nginx.conf.backup
mv /etc/nginx/conf.d/ci.conf /etc/nginx/conf.d/ci.conf.backup
mv /etc/nginx/conf.d/vps.conf /etc/nginx/conf.d/vps.conf.backup
cat <<'nginxconf'> /etc/nginx/nginx.conf
user www-data;

worker_processes 1;
pid /var/run/nginx.pid;

events {
	multi_accept on;
  worker_connections 1024;
}

http {
	gzip on;
	gzip_vary on;
	gzip_comp_level 5;
	gzip_types    text/plain application/x-javascript text/xml text/css;

	autoindex on;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  server_tokens off;
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;
  client_max_body_size 32M;
	client_header_buffer_size 8m;
	large_client_header_buffers 8 8m;

	fastcgi_buffer_size 8m;
	fastcgi_buffers 8 8m;

	fastcgi_read_timeout 600;

	set_real_ip_from 204.93.240.0/24;
	set_real_ip_from 204.93.177.0/24;
	set_real_ip_from 199.27.128.0/21;
	set_real_ip_from 173.245.48.0/20;
	set_real_ip_from 103.21.244.0/22;
	set_real_ip_from 103.22.200.0/22;
	set_real_ip_from 103.31.4.0/22;
	set_real_ip_from 141.101.64.0/18;
	set_real_ip_from 108.162.192.0/18;
	set_real_ip_from 190.93.240.0/20;
	set_real_ip_from 188.114.96.0/20;
	set_real_ip_from 197.234.240.0/22;
	set_real_ip_from 198.41.128.0/17;
	real_ip_header     CF-Connecting-IP;

  include /etc/nginx/conf.d/*.conf;
}
nginxconf

cat <<'ciconf'> /etc/nginx/ci.conf
server {
  listen       80;
  server_name  127.0.0.1 localhost;
  access_log /var/log/nginx/ci-access.log;
  error_log /var/log/nginx/ci-error.log error;
  root   /home/ci/public_html;

  location / {
    index  index.html index.htm index.php;
    try_files $uri $uri/ /index.php?$args;
  }

  location ~ \.php$ {
    include /etc/nginx/fastcgi_params;
    fastcgi_pass  127.0.0.1:9000;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
  }
}
ciconf
sed -i 's/cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g' /etc/php/5.6/fpm/php.ini
sed -i 's/listen = \/var\/run\/php5.6-fpm.sock/listen = 127.0.0.1:9000/g' /etc/php/5.6/fpm/pool.d/www.conf
cd

cat <<'myIndex' > /home/ci/public_html/info.php
<?php
/*
 * Created By
 * Ahmad Fauzan
 * https://facebook.com/ahmadfauzanhabibi
 */
$hostname = $_SERVER['HTTP_HOST'];
$hostaddr = $_SERVER['SERVER_ADDR'];
function get_client_ip() {
	$ipaddress = '';
	if (isset($_SERVER['HTTP_CLIENT_IP']))
		$ipaddress = $_SERVER['HTTP_CLIENT_IP'];
	else if(isset($_SERVER['HTTP_X_FORWARDED_FOR']))
		$ipaddress = $_SERVER['HTTP_X_FORWARDED_FOR'];
	else if(isset($_SERVER['HTTP_X_FORWARDED']))
		$ipaddress = $_SERVER['HTTP_X_FORWARDED'];
	else if(isset($_SERVER['HTTP_FORWARDED_FOR']))
		$ipaddress = $_SERVER['HTTP_FORWARDED_FOR'];
	else if(isset($_SERVER['HTTP_FORWARDED']))
		$ipaddress = $_SERVER['HTTP_FORWARDED'];
	else if(isset($_SERVER['REMOTE_ADDR']))
		$ipaddress = $_SERVER['REMOTE_ADDR'];
	else
		$ipaddress = 'UNKNOWN';
	return $ipaddress;
}
$PublicIP = get_client_ip(); 
$json  = file_get_contents("https://freegeoip.app/json/$PublicIP");
$json  =  json_decode($json ,true);
$ip_user =  $json['ip'];
$country =  $json['country_name'];
$region= $json['region_name'];
$city = $json['city'];
?>
<?php
function uptime(){
  if(PHP_OS == "Linux") {
    $uptime = @file_get_contents( "/proc/uptime");
    if ($uptime !== false) {
      $uptime = explode(" ",$uptime);
      $uptime = $uptime[0];
      $days = explode(".",(($uptime % 31556926) / 86400));
      $hours = explode(".",((($uptime % 31556926) % 86400) / 3600));
      $minutes = explode(".",(((($uptime % 31556926) % 86400) % 3600) / 60));
      $time = ".";
      if ($minutes > 0)
        $time=$minutes[0]." mins".$time;
      if ($minutes > 0 && ($hours > 0 || $days > 0))
        $time = ", ".$time;
      if ($hours > 0)
        $time = $hours[0]." hours".$time;
      if ($hours > 0 && $days > 0)
        $time = ", ".$time;
      if ($days > 0)
        $time = $days[0]." days".$time;
    } else {
      $time = false;
    }
  } else {
    $time = false;
  }
  return $time;
}
?>
<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">
	<meta name="keywords" content="VPSX, VPSIIX, VIPSSH, SSH SSL, VPN, SSH, TELIN, SGDO, SGGS, LINODE, VULTR, OPENVPN, TUNNELING, SQUID, PROXY, SSH SINGAPORE, SSH INDONESIA, VPS INDONESIA, AUTOSCRIPT">
	<meta name="rating" content="vpsiix">
	<meta name="author" content="vpsiix">
    <title><? echo $hostname; ?></title>
	<link rel="shortcut icon" href="https://cdn.countryflags.com/download/indonesia/flag-png-3d-round-icon-32.png">
</head>
<script>
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

ga('create', 'UA-183884861-1', 'auto');
ga('send', 'pageview');
</script>
<!-- End Google Analytics -->
<body style="text-align:center">
	<div>
		<h3> Wellcome To <? echo $hostaddr; ?></h3>
		<p><?php echo "". date("l d-M-Y"); ?>&emsp;<?php date_default_timezone_set("Asia/Jakarta"); echo "". date("H:i"); ?> GMT+7</p>
	</div>
	<div>
		<p> Server Uptime : <? echo uptime(); ?></p>
		<p> Your IP : <? echo $PublicIP; ?></p>
		<p> Country : <? echo $country; ?></p>
		<p> Region : <? echo $region ?></p>
		<p> City : <? echo $city; ?></p>
		<a href="http://s11.flagcounter.com/more/3Lp"><img src="http://s11.flagcounter.com/count2/3Lp/bg_FFFFFF/txt_000000/border_CCCCCC/columns_4/maxflags_250/Visitors/labels_1/pageviews_1/flags_1/percent_0/" style="display:none" alt="Free counters!" border="0"></a>
	</div>
	<div><?php phpinfo() ?>
	</div>
	<footer>
		 <p class="copyright">Copyright &copy; 2017 - <? print date('Y'); ?> VPSIIX</p>
	<footer>
</body>
</html>
myIndex
chown -R www-data:www-data /home/ci/public_html
chmod -R g+rw /home/ci/public_html
chmod 777 /home/ci/public_html/config
chmod 777 /home/ci/public_html/config/inc.php
chmod 777 /home/ci/public_html/config/route.php

a2ensite ci.conf
service php5.6-fpm restart
service nginx restart
cd

# Setting server local time
ln -fs /usr/share/zoneinfo/$MyVPS_Time /etc/localtime

# Running screenfetch
wget -O /usr/bin/screenfetch "https://raw.githubusercontent.com/vpsiix/AutoScriptDebian/master/Files/Plugins/screenfetch"
chmod +x /usr/bin/screenfetch
echo "/bin/bash /etc/openvpn/openvpn.bash" >> .profile
echo "clear" >> .profile
echo "screenfetch" >> .profile

# Adding Swap file
sudo dd if=/dev/zero of=/swapfile bs=1024 count=1048576
sudo chmod 600 /swapfile
sudo mkswap /swapfile
sudo swapon /swapfile
echo "/swapfile swap swap defaults 0 0" >> /etc/fstab
sudo sysctl vm.swappiness=10
echo "vm.swappiness=10" >> /etc/sysctl.conf
sudo sysctl -p

# Clearing all logs from installation
rm -rf /root/.bash_history && history -c && echo '' > /var/log/syslog
cd

# Showing additional information from installating this script
echo -e ""
echo -e ""
linux_logo -l
echo -e ""
echo -e " ======================================="
echo -e "  Facebook https://fb.com/ahmadfauzanhabibi"
echo -e "  Github https://github.com/vpsiix"
echo -e "  Donations https://paypal.me/ahmadfauzanhabibi"
echo -e " ======================================="
echo -e ""
echo -e " Success Install AutoScript Debian to $IPADDR"
echo -e ""
echo -e ""
echo -e " Service Ports: "
echo -e " OpenSSH = $SSH_Port1, $SSH_Port2, SSL  $Stunnel_Port1"
echo -e " DropbearSSH = $Dropbear_Port1, $Dropbear_Port2, SSL  $Stunnel_Port2"
echo -e " Privoxy = $Privoxy_Port1 , $Privoxy_Port2"
echo -e " Squid = $Squid_Port1 , $Squid_Port2"
echo -e " Webmin = http://$IPADDR:10000"
echo -e ""
echo -e " ======================================="
echo -e " Copyright © VPSIIX 2017 - $YearNow"
echo -e " ======================================="
echo -e ""
rm -f DebianX*
